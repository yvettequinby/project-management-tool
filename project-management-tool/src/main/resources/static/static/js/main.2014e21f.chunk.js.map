{"version":3,"sources":["serviceWorker.js","actions/types.js","components/Project/ProjectItem.js","actions/projectActions.js","components/Project/CreateProjectButton.js","components/Dashboard.js","utils/setJwtToken.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/projectTaskReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","utils/setCurrentUser.js","actions/securityActions.js","components/Layout/Header.js","components/Layout/FieldErrors.js","components/Layout/ErrorMessage.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask.js","actions/projectBoardActions.js","components/ProjectBoard/ProjectTaskList.js","components/ProjectBoard/ProjectBoardHeader.js","components/Layout/ErrorList.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/AddProjectTask.js","components/ProjectBoard/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","utils/SecureRoute.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","GET_ERRORS","ProjectItem","onDeleteClick","projectCode","_this","props","deleteProject","project","this","react_default","a","createElement","className","code","name","description","Link","to","concat","onClick","bind","Component","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","wrap","_context5","prev","next","confirm","axios","delete","type","payload","stop","_x5","apply","arguments","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","id","state","projectContainer","_ref3","_callee3","res","_context3","get","sent","data","_x3","setJwtToken","token","defaults","headers","common","initialState","projectTaskList","projectTask","validToken","user","combineReducers","errors","length","undefined","action","prototype","toString","call","message","objectSpread","filter","projectTaskContainer","securityContainer","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","setCurrentUser","jwtToken","decodedJwtToken","jwt_decode","logout","localStorage","removeItem","Header","href","headerLinks","_this$props$security","security","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","FieldErrors","msgs","msg","index","ErrorMessage","class","role","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","startDate","endDate","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","value","preventDefault","newProject","createProject","history","classnames","is-invalid","placeholder","Layout_FieldErrors","_ref","_callee","_context","post","push","t0","response","_x","UpdateProject","_nextProps$project","updatedProject","updateProject","params","getProject","disabled","_ref4","_callee4","_context4","_x4","_ref2","_callee2","_context2","put","_x2","ProjectTask","projectTaskCode","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","ProjectTaskList","status","projectTasks","filteredTasks","ProjectBoard_ProjectTask","NoTasksInfo","ProjectBoardHeader","ErrorList","keys","ProjectBoard","getProjectTasks","ProjectBoard_ProjectTaskList","AddProjectTask","dueDate","newProjectTask","createProjectTask","UpdateProjectTask","_nextProps$projectTas","updatedProjectTask","updateProjectTask","getProjectTask","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","setItem","console","log","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2014e21f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_PROJECT_TASKS = \"GET_PROJECT_TASKS\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = projectCode => {\r\n    this.props.deleteProject(projectCode);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.code}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.name}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.code}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\" /> Project Board\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.code}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\" /> Update Project Info\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(this, project.code)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\" /> Delete Project\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({ type: GET_ERRORS, payload: {} });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.put(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/list\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (projectCode, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${projectCode}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // push the user back to the dashboard if there's an error\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = projectCode => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure you want to delete this project and all the related tasks?\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${projectCode}`);\r\n    dispatch({ type: DELETE_PROJECT, payload: projectCode });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CreateProjectButton() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  // load the projects when this component mounts\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  projects: PropTypes.array.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.projectContainer.projects\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJwtToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      if (\r\n        Object.prototype.toString.call(action.payload) === \"[object String]\"\r\n      ) {\r\n        return { message: action.payload };\r\n      } else {\r\n        return action.payload;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload.projects\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      // remove deleted project directly from state\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.code !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROJECT_TASKS,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projectTaskList: {},\r\n  projectTask: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECT_TASKS:\r\n      return {\r\n        ...state,\r\n        projectTaskList: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return { ...state, projectTask: action.payload };\r\n    case DELETE_PROJECT_TASK:\r\n      return { ...state, projectTaskList: action.payload };\r\n    // TODO\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst isTokenPresent = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: isTokenPresent(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport projectTaskReducer from \"./projectTaskReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  projectContainer: projectReducer,\r\n  projectTaskContainer: projectTaskReducer,\r\n  securityContainer: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\nimport store from \"../store\";\r\n\r\nconst setCurrentUser = jwtToken => {\r\n  const decodedJwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decodedJwtToken\r\n  });\r\n  return decodedJwtToken;\r\n};\r\n\r\nexport default setCurrentUser;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJwtToken from \"../utils/setJwtToken\";\r\nimport setCurrentUser from \"../utils/setCurrentUser\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/user/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    // post the login request\r\n    const res = await axios.post(\"/api/user/login\", loginRequest);\r\n    // extract jwt token from response\r\n    const { jwtToken } = res.data;\r\n    // store the token in redux\r\n    localStorage.setItem(\"jwtToken\", jwtToken);\r\n    // set our token in header for all future requests\r\n    setJwtToken(jwtToken);\r\n    // set the current user\r\n    setCurrentUser(jwtToken);\r\n  } catch (err) {\r\n    if (err.response) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.securityContainer\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React from \"react\";\r\n\r\nfunction FieldErrors(props) {\r\n  if (props.msgs) {\r\n    return (\r\n      <React.Fragment>\r\n        {props.msgs.map(function(msg, index) {\r\n          return <div className=\"invalid-feedback\">{msg}</div>;\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n\r\nexport default FieldErrors;\r\n","import React from \"react\";\r\n\r\nexport default function ErrorMessage(props) {\r\n  if (props.errors && props.errors.message) {\r\n    // generic error message\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n              ERROR: {props.errors.message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      code: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // update state with any new form values\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  // prepare a project object from the state and send to createProject() function\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      name: this.state.name,\r\n      code: this.state.code,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project</h5>\r\n              <hr />\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Name</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.name} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Project Code</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.code\r\n                    })}\r\n                    placeholder=\"Unique Project Code\"\r\n                    name=\"code\"\r\n                    value={this.state.code}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.code} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Description</h6>\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.description} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Start Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.startDate\r\n                    })}\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.startDate} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Estimated End Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.endDate\r\n                    })}\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.endDate} />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Add some restraints so the component is always used properly\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// function to map state to properties\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\n// connect component to redux and export\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, updateProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      code: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      name,\r\n      code,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      name,\r\n      code,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n  }\r\n\r\n  // prepare a project object from the state and send to createProject() function\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      code: this.state.code,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.updateProject(updatedProject, this.props.history);\r\n  }\r\n\r\n  // update state with any new form values\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { projectCode } = this.props.match.params;\r\n    this.props.getProject(projectCode, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project</h5>\r\n              <hr />\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Name</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.name} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Project Code</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Unique Project Code\"\r\n                    name=\"code\"\r\n                    disabled\r\n                    value={this.state.code}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.code\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.code} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Description</h6>\r\n                  <textarea\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.description} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Start Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.startDate\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.startDate} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Estimated End Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.endDate\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.endDate} />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  updateProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.projectContainer.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, updateProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../actions/projectBoardActions\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick = (projectCode, projectTaskCode) => {\r\n    this.props.deleteProjectTask(projectCode, projectTaskCode);\r\n  };\r\n  render() {\r\n    const { projectTask } = this.props;\r\n    const { project } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n    if (projectTask.priority === 1) {\r\n      priorityString = \"High\";\r\n      priorityClass = \"bg-danger text-light\";\r\n    } else if (projectTask.priority === 2) {\r\n      priorityString = \"Medium\";\r\n      priorityClass = \"bg-warning text-light\";\r\n    } else {\r\n      priorityString = \"Low\";\r\n      priorityClass = \"bg-info text-light\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          {projectTask.code} ({priorityString})\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {projectTask.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project.code}/${projectTask.code}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project.code,\r\n              projectTask.code\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECT_TASKS,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const createProjectTask = (\r\n  projectCode,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/project/${projectCode}/task`, projectTask);\r\n    history.push(`/projectBoard/${projectCode}`);\r\n    dispatch({ type: GET_ERRORS, payload: {} });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  projectCode,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.put(`/api/project/${projectCode}/task`, projectTask);\r\n    history.push(`/projectBoard/${projectCode}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTasks = projectCode => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${projectCode}/task/list`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASKS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  projectCode,\r\n  projectTaskCode,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/project/${projectCode}/task/${projectTaskCode}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // push the user back to the dashboard if there's an error\r\n    history.push(`/projectBoard/${projectCode}`);\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  projectCode,\r\n  projectTaskCode\r\n) => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want to delete this project task?\")) {\r\n    await axios.delete(`/api/project/${projectCode}/task/${projectTaskCode}`);\r\n    const res = await axios.get(`/api/project/${projectCode}/task/list`);\r\n    dispatch({ type: DELETE_PROJECT_TASK, payload: res.data });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ProjectTask from \"./ProjectTask\";\r\n\r\nfunction ProjectTaskList(props) {\r\n  const { projectTaskList } = props;\r\n  const { status } = props;\r\n  if (projectTaskList.projectTasks) {\r\n    const filteredTasks = projectTaskList.projectTasks.filter(\r\n      projectTask => projectTask.status === status\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        {filteredTasks.map(projectTask => (\r\n          <ProjectTask\r\n            key={projectTask.id}\r\n            projectTask={projectTask}\r\n            project={projectTaskList.project}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n\r\nexport default ProjectTaskList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NoTasksInfo(props) {\r\n  if (\r\n    props.projectTaskList.projectTasks &&\r\n    props.projectTaskList.projectTasks.length > 0\r\n  ) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"alert alert-info\">\r\n              No tasks exist yet for this project\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function ProjectBoardHeader(props) {\r\n  const { projectTaskList } = props;\r\n  const { projectCode } = props;\r\n  if (projectTaskList.project) {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Link\r\n              to={`/addProjectTask/${projectCode}`}\r\n              className=\"btn btn-primary mb-3\"\r\n            >\r\n              <i className=\"fas fa-plus-circle\" />\r\n              &nbsp; Create Project Task\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h3>\r\n              Project {projectTaskList.project.code} -{\" \"}\r\n              {projectTaskList.project.name}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <NoTasksInfo projectTaskList={projectTaskList} />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ErrorList(props) {\r\n  if (props.errors) {\r\n    if (props.errors.message) {\r\n      return <React.Fragment />;\r\n    } else {\r\n      // field errors\r\n      const keys = Object.keys(props.errors);\r\n      if (keys.length > 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                  Please correct the following errors:\r\n                  <ul>\r\n                    {keys.map(function(key, index) {\r\n                      return props.errors[key].map(function(msg, index) {\r\n                        return <li>{msg}</li>;\r\n                      });\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return <React.Fragment />;\r\n      }\r\n    }\r\n  } else {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getProjectTasks } from \"../../actions/projectBoardActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProjectTaskList from \"./ProjectTaskList\";\r\nimport ProjectBoardHeader from \"./ProjectBoardHeader\";\r\nimport ErrorList from \"../Layout/ErrorList\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // load the projects when this component mounts\r\n  componentDidMount() {\r\n    const { projectCode } = this.props.match.params;\r\n    this.props.getProjectTasks(projectCode);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { projectTaskList } = this.props;\r\n    const { errors } = this.props;\r\n    const { projectCode } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <ProjectBoardHeader\r\n          projectTaskList={projectTaskList}\r\n          projectCode={projectCode}\r\n        />\r\n\r\n        <br />\r\n        <hr />\r\n\r\n        <div className=\"container\">\r\n          <ErrorList errors={errors} />\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-secondary text-white\">\r\n                  <h3>TO DO</h3>\r\n                </div>\r\n              </div>\r\n              <ProjectTaskList\r\n                projectTaskList={projectTaskList}\r\n                status=\"TODO\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                  <h3>In Progress</h3>\r\n                </div>\r\n              </div>\r\n              <ProjectTaskList\r\n                projectTaskList={projectTaskList}\r\n                status=\"IN PROGRESS\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card text-center mb-2\">\r\n                <div className=\"card-header bg-success text-white\">\r\n                  <h3>Done</h3>\r\n                </div>\r\n              </div>\r\n              <ProjectTaskList\r\n                projectTaskList={projectTaskList}\r\n                status=\"DONE\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  getProjectTasks: PropTypes.func.isRequired,\r\n  projectTaskList: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  projectTaskList: state.projectTaskContainer.projectTaskList,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTasks }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProjectTask } from \"../../actions/projectBoardActions\";\r\nimport classnames from \"classnames\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { projectCode } = this.props.match.params;\r\n    this.state = {\r\n      projectCode: projectCode,\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // update state with any new form values\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  // prepare a project task object from the state and send to createProject() function\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.createProjectTask(\r\n      this.state.projectCode,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { projectCode } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${projectCode}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Create Project Task</h4>\r\n              <p className=\"lead text-center\">Project {projectCode}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Summary</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.summary} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Acceptance Criteria</h6>\r\n                  <textarea\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.acceptanceCriteria\r\n                    })}\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.acceptanceCriteria} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Due Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dueDate\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.dueDate\r\n                    })}\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.dueDate} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Priority</h6>\r\n                  <select\r\n                    name=\"priority\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.priority\r\n                    })}\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                  <FieldErrors msgs={errors.priority} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Status</h6>\r\n                  <select\r\n                    name=\"status\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.status\r\n                    })}\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TODO\">TO DO</option>\r\n                    <option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                  <FieldErrors msgs={errors.status} />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Add some restraints so the component is always used properly\r\nAddProjectTask.propTypes = {\r\n  createProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\n// function to map state to properties\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\n// connect component to redux and export\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../actions/projectBoardActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { projectCode } = this.props.match.params;\r\n    const { projectTaskCode } = this.props.match.params;\r\n    this.state = {\r\n      project: {\r\n        code: projectCode\r\n      },\r\n      id: \"\",\r\n      code: projectTaskCode,\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      project,\r\n      id,\r\n      code,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate\r\n    } = nextProps.projectTask;\r\n\r\n    this.setState({\r\n      project,\r\n      id,\r\n      code,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate\r\n    });\r\n  }\r\n\r\n  // prepare a project task object from the state and send to updateProjectTask() function\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      code: this.state.code,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.project.code,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  // update state with any new form values\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProjectTask(\r\n      this.state.project.code,\r\n      this.state.code,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { project } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${project.code}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project {project.code}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <h6>Task Code</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"code\"\r\n                    disabled\r\n                    value={this.state.code}\r\n                    onChange={this.onChange}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.code\r\n                    })}\r\n                  />\r\n                  <FieldErrors msgs={errors.code} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Summary</h6>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.summary} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Acceptance Criteria</h6>\r\n                  <textarea\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.acceptanceCriteria\r\n                    })}\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.acceptanceCriteria} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Due Date</h6>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dueDate\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.dueDate\r\n                    })}\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.dueDate} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h6>Priority</h6>\r\n                  <select\r\n                    name=\"priority\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.priority\r\n                    })}\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                  <FieldErrors msgs={errors.priority} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h6>Status</h6>\r\n                  <select\r\n                    name=\"status\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.status\r\n                    })}\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TODO\">TO DO</option>\r\n                    <option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                  <FieldErrors msgs={errors.status} />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  projectTask: state.projectTaskContainer.projectTask,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.securityContainer\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"fullName\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.fullName} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.username} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.password} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.confirmPassword} />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.securityContainer\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport FieldErrors from \"../Layout/FieldErrors\";\r\nimport ErrorMessage from \"../Layout/ErrorMessage\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // update state with any new form values\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  // prepare a login request object from the state and send to login() function\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(loginRequest, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <ErrorMessage errors={errors} />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.username} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FieldErrors msgs={errors.password} />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.securityContainer,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.securityContainer\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport setJwtToken from \"./utils/setJwtToken\";\nimport { logout } from \"./actions/securityActions\";\nimport setCurrentUser from \"./utils/setCurrentUser\";\nimport SecuredRoute from \"./utils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJwtToken(jwtToken);\n  const decodedJwtToken = setCurrentUser(jwtToken);\n  const currentTime = Date.now() / 1000;\n  if (decodedJwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:projectCode\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:projectCode\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:projectCode\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:projectCode/:projectTaskCode\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}